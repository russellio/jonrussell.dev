[
    {
        "id": "project-dod",
        "title": "DoD Budgeting Application",
        "byline": "SaaS budgeting platform supporting the Navy's Strategic Systems Programs.",
        "description": "<p>At Pioneering Evolution, I worked on a budgeting platform used by the Department of Defense to plan and simulate complex financial scenarios. The system lets analysts manage detailed data, test \"what-if\" projections, and track approvals across multiple leadership levels.</p><p>I worked full stack across Laravel 11, PHP 8, MySQL 8, Vue 3, and TypeScript, contributing to both the backend architecture and the frontend experience. One of my biggest contributions was leading the migration from Vue 2 to Vue 3, a major overhaul that modernized the codebase and improved long-term maintainability. I also focused on performance-critical areas, rewriting API endpoints and optimizing queries to cut response times and reduce memory usage.</p><p>Beyond code, I worked closely with QA and DevOps to ensure smooth deployments, and I paired with teammates for mentoring, reviews, and shared problem-solving. The result was a faster, cleaner, and more resilient platform that helped users make smarter, data-driven budget decisions with confidence.</p>",
        "skills": ["Laravel", "Vue.js", "PHP", "MySQL", "TypeScript", "Bootstrap"],
        "technologies": ["Microservices", "Vuex", "Pinia", "RestAPIs", "Node.js"],
        "tools": ["Docker", "PEST", "Jira", "Bitbucket", "Git"],
        "company": "Pioneering Evolution",
        "icon": "",
        "image": "/images/ssp-logo.png",
        "bgImage": "/images/ssp-logo.png",
        "bgPositionX": "-30px",
        "bgPositionY": "-50px",
        "links": [{"title": "Additional Contract Info (sam.gov)", "url": "https://sam.gov/opp/2256b7a820714afb89915925eed9b856/view"}]
    },
    {
        "id": "project-api",
        "title": "Enterprise API Gateway & Authentication",
        "byline": "Centralized API gateway with OAuth2 authentication, rate limiting, and request routing for multiple client applications",
        "description": "<p>As a part of the Digital Flag Board implementation, authentication through LDAP was added so users could utilize their existing Active Directory accounts. Once that was up and running, it became clear a more unified way for additional internal apps to talk to each other was needed.</p><p> That work on authentication kick-started the groundwork for what became the Glen Raven API. I dove into research, even traveling to the \"API World\" conference.  I came up with a proposal for a secure, REST-based API with JWT authentication and Azure pipeline management. That effort set the stage for the Glen Raven API to connect systems, share data, and build future apps on a common foundation. The Glen Raven API allows several different applications to interface with each other (client/vendor orders, distribution, metrics, et al).</p>",
        "skills": ["Laravel", "PHP", "MySQL", "JavaScript"],
        "technologies": ["LDAP", "Active Directory", "JWT"],
        "tools": ["Jira", "Github", "Azure Pipelines", "NPM", "Postman"],
        "company": "Glen Raven",
        "icon": "",
        "image": "",
        "bgImage": "/images/api-bg.png",
        "bgPositionX": "-30px",
        "bgPositionY": "-65px",
        "links": []
    },
    {
        "id": "project-digital",
        "title": "Digital Flag Board",
        "byline": "Ticketing system for tracking issues with machines across factories.",
        "description": "<p><strong>OR: Enterprise ticketing system that connects factory operators, technicians, and management in real time to keep production running smoothly.</strong></p><p>At Glen Raven, I led the development of the Digital Flag Board from inception to fruition.  The Digital Flag Board is an enterprise ticketing platform built for factory operations, connecting machine operators, technicians, and management in real time. Operators use it to flag issues directly from kiosks and mobile devices stationed across the factory floor, while technicians track, resolve, and close those tickets through a responsive, purpose-built interface.</p><p>I worked full stack across Laravel, PHP, MySQL, and HTML5/CSS3, Bootstrap, jQuery, and JavaScript on the frontend, building features that kept the platform stable under constant use.</p><p>The system ran as a dedicated web app on every kiosk and device, authenticated through Active Directory and LDAP for secure, role-based access.</p><p>The admin console allowed senior management to review cycle time metrics, run performance reports, manage users, and handle all CRUD operations through a clean, intuitive dashboard. My focus was creating a reliable, high-availability system that kept production flowing and reduced downtime across the plant.</p>",
        "skills": ["Laravel", "PHP", "MySQL", "JavaScript", "jQuery", "Bootstrap"],
        "technologies": ["LDAP", "Active Directory", "JWT", "Redis"],
        "tools": ["Jira", "Github", "Jenkins", "Azure Pipelines", "NPM", "PHPUnit"],
        "company": "Glen Raven",
        "icon": "",
        "image": "/images/flag-board/bg.png",
        "bgImage": "/images/flag-board/bg.png",
        "bgPositionX": "-30px",
        "bgPositionY": "-130px",
        "links": []
    },
    {
        "id": "project-concert",
        "title": "Concert Web",
        "byline": "A secure, real-time dashboard for monitoring high-volume cash counting and sorting machines anywhere in the world.",
        "description": "<p>Concert Web was the web interface for ARCA’s flagship money counting and sorting machines, deployed in casinos, theme parks, and financial institutions handling high volumes of cash and coins. The machines ran on proprietary software, and Concert Web provided a secure, real-time dashboard that let companies monitor the exact status of machines and safes from anywhere in the world. Users could see precise counts, denominations, and transaction details in real time, giving them full visibility into cash operations.</p><p>I served as a software developer on the platform and led the integration of Fiserv APIs, enabling direct B2B interactions and expanding the system’s capabilities for financial reporting and reconciliation. I worked across Laravel, PHP, MySQL, and Bootstrap to ensure real-time data flowed smoothly from machines to the web dashboard, while maintaining robust security and performance under heavy transactional loads.</p><p>My contributions helped turn complex, mission-critical cash operations into a streamlined, accessible platform that businesses could rely on for accurate monitoring and decision-making.</p>",
        "skills": ["Laravel 4", "PHP 7", "MySQL 5.6", "JavaScript", "jQuery", "Bootstrap"],
        "technologies": ["Redis", "REST APIs"],
        "tools": ["Jira", "Bitbucket", "Jenkins", "NPM", "PHPUnit"],
        "company": "ARCA",
        "icon": "",
        "image": "/images/concert-bg.png",
        "bgImage": "/images/concert-bg.png",
        "bgPositionX": "-30px",
        "bgPositionY": "-65px",
        "links": []
    },
    {
        "id": "project-sms",
        "title": "Enterprise SMS Notification Services",
        "byline": "Inclement weather and office closure notification system",
        "description": "<p><strong>Glen Raven 511 – SMS Notification Services</strong></p><p>At Glen Raven, I built an internal web application that lets HR and other teams send urgent updates to employees via SMS, covering weather alerts, closures, and other critical notifications. The system ensured messages reached everyone quickly and reliably, helping the company respond in real time to changing circumstances.</p><p>I built the platform using Laravel, PHP, MySQL, JavaScript, jQuery, and Bootstrap, and integrated Nexmo© for sending and receiving SMS messages. My focus was on creating a responsive, easy-to-use interface while maintaining robust backend logic and seamless third-party API communication. The result was a dependable, low-friction tool that kept the entire workforce informed and safe during urgent situations.</p>",
        "skills": ["Laravel", "PHP", "MySQL", "JavaScript", "jQuery", "Third-party API integration", "Bootstrap"],
        "technologies": ["Nexmo"],
        "tools": ["Jira", "Github", "Jenkins"],
        "company": "Glen Raven",
        "icon": "",
        "image": "https://static.photos/technology/640x360/144",
        "bgImage": "/images/sms-alert.jpg",
        "bgPositionX": "-30px",
        "bgPositionY": "-30px",
        "links": [
            {"title": "Nexmo (now Vonage) - Communication APIs", "url": "https://www.vonage.com/communications-apis/"}
        ]
    },
    {
        "id": "project-web",
        "title": "Web Request Dashboard",
        "byline": "Custom Jira-inspired dashboard that gives teams full visibility and control over tickets without extra licenses.",
        "description": "<p>At Glen Raven, I built an internal web application that gave teams a full view of Jira Cloud tickets without needing full Jira accounts. As a cost-saving initiative, the company limited Jira licenses, so I recreated the Scrum board experience in a custom frontend while managing user–ticket relationships and roles locally. The interface supported drag-and-drop ticket management, icons, status tracking, and email notifications for ticket events.</p><p>I worked full stack using Laravel, PHP, MySQL, JavaScript, jQuery, and Bootstrap, integrating tightly with Jira Cloud’s API. Users could create tickets, attach files, comment, and view all ticket details, while the backend handled syncing, data logic, and permissions through dedicated Jira API accounts. The system streamlined workflow, improved visibility across departments, and maintained the familiar Jira experience without incurring extra licensing costs.</p>",
        "skills": ["PHP", "MySQL", "MSSQL", "JavaScript", "AJAX", "jQuery", "Third-party API integration"],
        "technologies": ["Jira", "Github", "Azure Pipelines"],
        "tools": [],
        "company": "Glen Raven",
        "image": "/images/web-requests-bg.png",
        "bgImage": "/images/web-requests-bg.png",
        "bgPositionX": "0",
        "bgPositionY": "0",
        "links": []
    },
    {
        "id": "project-manager",
        "title": "Project Manager Dashboard",
        "byline": "Centralized dashboard that streamlines project tracking, task management, and client service for product installations.",
        "awards": ["Scott Cook Award Nominee - Intuit"],
        "description": "<p>At Digital Insight, I developed the Project Management Dashboard, a web-based platform designed to streamline how Project Managers on the Automated Implementation Management team oversee product installations. Before the dashboard, PMs had to navigate multiple systems such as QuickBase, the intranet, and Pivotal, a cumbersome CRM, to access critical product details, SOPs, and progress tracking. This fragmented workflow made managing installations, tracking tasks, and logging time inefficient and prone to delays.</p><p>The PM Dashboard consolidated all key information into a single, dynamic interface. Built using PHP, MySQL, MSSQL (for Pivotal integration), XHTML, and JavaScript/AJAX, it delivered a responsive, desktop-like experience without page reloads. I focused on integrating Pivotal data via its database while enabling task-level dependencies, customizable due dates, simplified incident creation, and aggregated resources from QuickBase. Project Managers could now track each project from start to finish, manage tasks, and store project-specific notes—all from one location.</p><p>This solution allowed rapid adaptation to individual project needs, centralized workflow, and simplified access to information that previously required multiple systems. Administrators could configure default task durations and dependencies, while the frontend offered drag-and-drop task management and real-time updates. The architecture supported quick development and deployment of new features, and the platform could be replicated for other teams using Pivotal in different capacities.</p><p>Adoption of the PM Dashboard significantly improved efficiency and project tracking. Surveys showed that 67% of the team used it multiple times per day, while 100% agreed it simplified project management, saved time, and helped deliver better results to clients. Early data indicated a positive trend in customer satisfaction scores after deployment, demonstrating the platform’s direct impact on operational effectiveness and client service.</p>",
        "skills": ["PHP", "MySQL", "MSSQL", "JavaScript", "AJAX", "jQuery", "Third-party API integration"],
        "technologies": ["Jira", "Github", "Azure Pipelines"],
        "tools": [],
        "company": "Digital Insight (Intuit)",
        "image": "/images/pm-dashboard/pm-db-1.png",
        "bgImage": "/images/pm-dashboard/pm-db-1.png",
        "bgPositionX": "0",
        "bgPositionY": "0",
        "links": []
    }
]
